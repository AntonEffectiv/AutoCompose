{"version":3,"file":"AutoComposeTextarea.js","sources":["../src/utils.js","../src/constants.js","../src/node-utils.js","../src/OverlaySuggestion.js","../src/AutoComposeTextarea.js"],"sourcesContent":["export const ensure = (context, object, keys) => {\n    [].concat(keys).forEach(key => {\n        if (typeof object[key] === 'undefined') {\n            throw new Error(`AutoCompose: Missing required parameter, ${context}.${key}`);\n        }\n    });\n};\n\nexport const ensureAnyOf = (context, object, keys) => {\n    let currentKey;\n    if (!keys.some(key => (\n        typeof object[currentKey = key] !== 'undefined'\n    ))) throw new Error(`AutoCompose: Missing required parameter, ${context}.${currentKey}`);\n};\n\nexport const ensureType = (context, object, key, type) => {\n    [].concat(object[key]).forEach(value => {\n        const valueType = typeof value;\n        if (valueType !== type && valueType !== 'undefined') {\n            throw new TypeError(`AutoCompose: Invalid Type for ${context}.${key}, expected ${type}`);\n        }\n    });\n};\n\nexport const getCursorPosition = input => {\n    return [input.selectionStart, input.selectionEnd].sort((a, b) => a - b);\n};\n\nexport const makeAsyncQueueRunner = () => {\n    let i = 0;\n    let queue = [];\n\n    return (f, j) => {\n        queue[j - i] = f;\n        while (queue[0]) ++i, queue.shift()();\n    };\n};\n\nexport const data = (element, key, value) => {\n    key = 'autosuggest_' + key;\n    if (typeof value !== 'undefined') {\n        element.dataset[key] = JSON.stringify(value);\n    } else {\n        value = element.dataset[key];\n        return typeof value !== 'undefined' ? JSON.parse(element.dataset[key]) : value;\n    }\n};\n","// Invisible character\nexport const POSITIONER_CHARACTER = \"\\ufeff\";\n\nexport const FONT_PROPERTIES = [\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font\n    'fontStyle',\n    'fontVariant',\n    'fontWeight',\n    'fontStretch',\n    'fontSize',\n    'fontSizeAdjust',\n    'fontFamily',\n\n    'textAlign',\n    'textTransform',\n    'textIndent',\n    'textDecoration',  // might not make a difference, but better be safe\n\n    'letterSpacing',\n    'wordSpacing',\n\n    'tabSize',\n    'MozTabSize'\n];\n\nexport const HOST_PROPERTIES = [\n    ...FONT_PROPERTIES,\n    'direction',  // RTL support\n    'boxSizing',\n    'width',  // on Chrome and IE, exclude the scrollbar, so the mirror div wraps exactly as the textarea does\n\n    'borderRightWidth',\n    'borderLeftWidth',\n\n    'paddingRight',\n    'paddingLeft',\n];\n\nexport const CLONE_PROPERTIES = [\n    ...HOST_PROPERTIES,\n    'overflowX',\n    'overflowY',  // copy the scrollbar for IE\n\n    'borderTopWidth',\n    'borderBottomWidth',\n    'borderStyle',\n\n    'paddingTop',\n    'paddingBottom',\n\n    'lineHeight',\n];\n\nexport const FILLER = ' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;';\n\nexport const INLINE_SUGGESTION_ID = '___autocompose_inline_suggestion___';\n","export const getGlobalOffset = $0 => {\r\n    let node = $0, top = 0, left = 0;\r\n\r\n    do {\r\n        left += node.offsetLeft;\r\n        top += node.offsetTop;\r\n    } while (node = node.offsetParent);\r\n\r\n    return { left, top };\r\n};\r\n\r\nexport const getSelectedTextNodes = () => {\r\n    const selection = window.getSelection();\r\n    if (!selection.isCollapsed) return {};\r\n\r\n    let { startContainer: node, startOffset: offset } = selection.getRangeAt(0);\r\n    if (node.nodeType !== node.TEXT_NODE) {\r\n        try {\r\n            node = getFirstChildNode(node.childNodes[offset]);\r\n            offset = 0;\r\n        } catch (e) {\r\n            try {\r\n                node = getLastChildNode(node.childNodes[offset - 1]);\r\n                offset = node.nodeValue ? node.nodeValue.length : null;\r\n            } catch(e) {}\r\n        }\r\n    }\r\n\r\n    return { node, offset };\r\n};\r\n\r\nexport const createNode = html => {\r\n    var div = document.createElement('div');\r\n    div.innerHTML = html.trim();\r\n    return div.firstChild;\r\n};\r\n\r\nexport const getFirstChildNode = node => {\r\n    let nextNode = node;\r\n    while (nextNode.firstChild) nextNode = nextNode.firstChild;\r\n    return nextNode;\r\n};\r\n\r\nexport const getLastChildNode = node => {\r\n    let nextNode = node;\r\n    while (nextNode.lastChild) nextNode = nextNode.lastChild;\r\n    return nextNode;\r\n};\r\n\r\nexport const getNextNode = (node, root) => {\r\n    let nextNode;\r\n    if (node.nextSibling)\r\n        nextNode = node.nextSibling;\r\n    else {\r\n        nextNode = node.parentNode;\r\n        while (nextNode !== root && !nextNode.nextSibling)\r\n            nextNode = nextNode.parentNode;\r\n        if (nextNode && nextNode !== root)\r\n            nextNode = nextNode.nextSibling\r\n        else return;\r\n    }\r\n\r\n    return getFirstChildNode(nextNode);\r\n};\r\n\r\nexport const getPrevNode = (node, root) => {\r\n    let prevNode;\r\n    if (node.previousSibling)\r\n        prevNode = node.previousSibling;\r\n    else {\r\n        prevNode = node.parentNode;\r\n        while (prevNode !== root && !prevNode.previousSibling)\r\n            prevNode = prevNode.parentNode;\r\n        if (prevNode && prevNode !== root)\r\n            prevNode = prevNode.previousSibling\r\n        else return;\r\n    }\r\n\r\n    return getLastChildNode(prevNode);\r\n};\r\n\r\nexport const removeNodesBetween = (startContainer, endContainer) => {\r\n    if (startContainer === endContainer) return;\r\n    let node = getNextNode(startContainer);\r\n    while (node !== endContainer) {\r\n        node.parentNode.removeChild(node);\r\n        node = getNextNode(startContainer);\r\n    }\r\n};\r\n\r\nexport const getNodeValue = node => {\r\n    if (node.tagName && node.tagName === 'BR')\r\n        return '\\n';\r\n    return node.nodeValue || '';\r\n};\r\n\r\nexport const setSelection = callback => {\r\n    const selection = window.getSelection();\r\n    const range = document.createRange();\r\n    callback(range);\r\n    selection.removeAllRanges();\r\n    selection.addRange(range);\r\n};","import { createNode, getGlobalOffset } from './node-utils';\nimport { POSITIONER_CHARACTER, HOST_PROPERTIES, FONT_PROPERTIES, FILLER } from './constants';\n\nclass OverlaySuggestion {\n    constructor() {\n        this.isEmpty = true;\n        this.isActive = false;\n        this.suggestion = '';\n\n        this.host = document.createElement('div');\n        this.host.style.cursor = 'text';\n        this.host.style.position = 'absolute';\n        this.host.style.borderColor = 'transparent';\n        this.host.style.backgroundColor = 'transparent';\n        this.host.style.overflow = 'hidden';\n        this.host.style.pointerEvents = 'none';\n\n        this.offset = document.createElement('div');\n        this.offset.appendChild(document.createTextNode(POSITIONER_CHARACTER));\n        this.offset.style.lineHeight = 1.5;\n\n        this.content = document.createElement('div');\n        this.content.style.lineHeight = '1px';\n\n        this.hide();\n        document.body.appendChild(this.host);\n        this.host.appendChild(this.offset);\n        this.host.appendChild(this.content);\n    }\n\n    show(position, element) {\n        if (position) {\n            const elementPosition = getGlobalOffset(element);\n            const elementStyles = window.getComputedStyle(element);\n\n            HOST_PROPERTIES.forEach(prop => {\n                this.host.style[prop] = elementStyles[prop];\n            });\n            this.host.style.left = `${elementPosition.left}px`;\n            this.host.style.top = `${position.top}px`;\n            this.host.style.height = `${parseFloat(elementStyles.height) - position.top + elementPosition.top}px`;\n            this.host.style.color = elementStyles.color;\n\n            if (element.scrollHeight > parseInt(elementStyles.height))\n                this.host.style.overflowY = 'scroll';\n            else\n                this.host.style.overflowY = 'hidden';\n\n            const leftWidth = position.left - elementPosition.left -\n                parseFloat(elementStyles.paddingLeft || 0);\n            const rightWidth = parseFloat(elementStyles.width) - position.left + elementPosition.left -\n                parseFloat(elementStyles.paddingRight || 0);\n            let firstLineWidth = 0;\n            if (elementStyles.direction === 'ltr') {\n                this.offset.style.float = 'left';\n                this.offset.style.width = `${leftWidth}px`;\n                firstLineWidth = rightWidth;\n            } else {\n                this.offset.style.float = 'right';\n                this.offset.style.width = `${rightWidth}px`;\n                firstLineWidth = leftWidth;\n            }\n\n            const span = document.createElement('span');\n            span.style.whiteSpace = 'nowrap';\n            FONT_PROPERTIES.forEach(prop => {\n                span.style[prop] = elementStyles[prop];\n            });\n\n            span.appendChild(createNode('<span>&nbsp;</span>'));\n            span.firstChild.style.fontSize = '1px';\n\n            const textNode = document.createTextNode('');\n            span.appendChild(textNode);\n\n            document.body.appendChild(span);\n\n            let crossed = false, lastSpaceAt = -1;\n            const suggestionLength = this.suggestion.length;\n            for (let i = 0; i < suggestionLength; i++) {\n                if (!crossed) {\n                    const text = this.suggestion[i];\n                    if (/\\s/.test(text)) lastSpaceAt = i;\n                    textNode.nodeValue += this.suggestion[i];\n                    crossed = span.offsetWidth > firstLineWidth;\n                    if (crossed) {\n                        for (let j = lastSpaceAt + 2; j <= i; j++) {\n                            this.content.childNodes[j].style.lineHeight = elementStyles.lineHeight;\n                        }\n                    }\n                }\n                if (crossed) {\n                    this.content.childNodes[i + 1].style.lineHeight = elementStyles.lineHeight;\n                }\n            }\n            if (crossed) {\n                this.content.lastChild.style.lineHeight = elementStyles.lineHeight;\n            }\n            document.body.removeChild(span);\n        }\n\n        this.host.style.display = 'block';\n        this.isActive = true;\n    }\n\n    hide() {\n        this.host.style.display = 'none';\n        this.isActive = false;\n    }\n\n    empty() {\n        this.isEmpty = true;\n        while (this.content.firstChild)\n            this.content.removeChild(this.content.firstChild);\n    }\n\n    fill(suggestion, onSet) {\n        this.empty();\n        this.suggestion = suggestion;\n\n        this.content.appendChild(createNode('<span>&nbsp;</span>'));\n        this.content.firstChild.style.fontSize = '1px';\n\n        suggestion.split('').concat(FILLER).forEach((char, i) => {\n            const charNode = createNode(`<span>${char}</span>`);\n            charNode.style.opacity = 0.7;\n            charNode.style.lineHeight = 1.5;\n            charNode.style.pointerEvents = 'all';\n            this.content.appendChild(charNode);\n\n            charNode.addEventListener('mousedown', e => {\n                onSet(suggestion.slice(0, i + 1));\n                this.hide();\n\n                e.preventDefault();\n                e.stopPropagation();\n            });\n        });\n\n        this.isEmpty = false;\n    }\n\n    getValue() {\n        return this.suggestion;\n    }\n}\n\nexport default OverlaySuggestion;\n","import { data, ensure, ensureType, getCursorPosition } from './utils';\r\nimport { POSITIONER_CHARACTER, CLONE_PROPERTIES } from './constants';\r\nimport { getGlobalOffset } from './node-utils';\r\nimport OverlaySuggestion from './OverlaySuggestion';\r\n\r\nfunction getCaretPosition(element) {\r\n    const [cursorPosition] = getCursorPosition(element);\r\n\r\n    // pre to retain special characters\r\n    const clone = document.createElement('pre');\r\n    clone.id = 'autocompose-positionclone';\r\n\r\n    const positioner = document.createElement('span');\r\n    positioner.appendChild(document.createTextNode(POSITIONER_CHARACTER));\r\n\r\n    const computed = window.getComputedStyle(element);\r\n    CLONE_PROPERTIES.forEach(prop => {\r\n        clone.style[prop] = computed[prop];\r\n    });\r\n\r\n    const elementPosition = getGlobalOffset(element);\r\n    clone.style.opacity = 0;\r\n    clone.style.position = 'absolute';\r\n    clone.style.top = `${elementPosition.top}px`;\r\n    clone.style.left = `${elementPosition.left}px`;\r\n    document.body.appendChild(clone);\r\n\r\n    if (element.scrollHeight > parseInt(computed.height))\r\n        clone.style.overflowY = 'scroll';\r\n    else\r\n        clone.style.overflowY = 'hidden';\r\n\r\n    clone.appendChild(document.createTextNode(element.value.slice(0, cursorPosition)));\r\n    clone.appendChild(positioner);\r\n\r\n    clone.style.maxWidth = '100%';\r\n    clone.style.whiteSpace = 'pre-wrap';\r\n    clone.style.wordWrap = 'break-word';\r\n\r\n    const caretPosition = getGlobalOffset(positioner);\r\n    caretPosition.top -= element.scrollTop;\r\n    caretPosition.left -= element.scrollLeft;\r\n    document.body.removeChild(clone);\r\n    return caretPosition;\r\n}\r\n\r\nconst setValue = ({ element, suggestion, onChange }) => {\r\n    const [startPosition] = getCursorPosition(element);\r\n    const originalValue = element.value;\r\n    const value = originalValue.slice(0, startPosition) + suggestion;\r\n\r\n    element.value = value + originalValue.slice(startPosition);\r\n    element.focus();\r\n\r\n    const cursorPosition = value.length;\r\n    element.setSelectionRange(cursorPosition, cursorPosition);\r\n    onChange(suggestion);\r\n};\r\n\r\nclass AutoComposeTextarea {\r\n    constructor(options, ...inputs) {\r\n        if (!options) {\r\n            throw new Error(`AutoCompose Textarea: Missing required parameter, options`);\r\n        }\r\n\r\n        if (typeof options === 'function')\r\n            options = { composer: options };\r\n\r\n        this.inputs = [];\r\n        this.suggestion = new OverlaySuggestion();\r\n        this.onChange = options.onChange || Function.prototype;\r\n\r\n        ensure('AutoCompose Textarea', options, 'composer');\r\n        ensureType('AutoCompose Textarea', options, 'composer', 'function');\r\n        this.composer = options.composer;\r\n\r\n        events: {\r\n            const self = this;\r\n            let handledInKeyDown = false;\r\n\r\n            this.onBlurHandler = function () {\r\n                self.suggestion.hide();\r\n            };\r\n\r\n            this.onKeyDownHandler = function (e) {\r\n                if (self.suggestion.isActive) {\r\n                    if (e.keyCode === 9 || e.keyCode === 39 || e.keyCode === 40) {\r\n                        setValue({\r\n                            element: this,\r\n                            suggestion: self.suggestion.getValue(),\r\n                            onChange: self.onChange.bind(this)\r\n                        });\r\n\r\n                        handledInKeyDown = true;\r\n                        e.preventDefault();\r\n                    }\r\n\r\n                    self.suggestion.hide();\r\n                }\r\n            };\r\n\r\n            let keyUpIndex = 0;\r\n            this.onKeyUpHandler = function (e) {\r\n                if (handledInKeyDown) {\r\n                    handledInKeyDown = false;\r\n                    return;\r\n                }\r\n\r\n                self.suggestion.hide();\r\n                const [startPosition, endPosition] = getCursorPosition(this);\r\n                if (startPosition !== endPosition) return;\r\n\r\n                const postValue = this.value.slice(startPosition);\r\n                if (postValue.trim()) return;\r\n                const preValue = this.value.slice(0, startPosition);\r\n\r\n                handlesuggestion: {\r\n                    keyUpIndex++;\r\n\r\n                    const caretPosition = getCaretPosition(this);\r\n                    (asyncReference => {\r\n                        self.composer.call(this, preValue, result => {\r\n                            if (!result || asyncReference !== keyUpIndex) return;\r\n\r\n                            self.suggestion.fill(result, suggestion => {\r\n                                setValue({\r\n                                    element: this,\r\n                                    suggestion: suggestion,\r\n                                    onChange: self.onChange.bind(this)\r\n                                });\r\n                            });\r\n\r\n                            self.suggestion.show(caretPosition, this);\r\n                        });\r\n                    })(keyUpIndex);\r\n                }\r\n            };\r\n        }\r\n\r\n        // initialize events on inputs\r\n        this.addInputs(...inputs);\r\n    }\r\n\r\n    addInputs(...args) {\r\n        const inputs = Array.prototype.concat.apply([], args.map(d => d[0] ? Array.prototype.slice.call(d, 0) : d));\r\n\r\n        inputs.forEach(input => {\r\n            // validate element\r\n            if (input.tagName !== 'TEXTAREA') {\r\n                throw new Error('AutoCompose Textarea: Invalid input: only textarea elements are supported');\r\n            }\r\n\r\n            // init events\r\n            input.addEventListener('blur', this.onBlurHandler);\r\n            input.addEventListener('keyup', this.onKeyUpHandler);\r\n            input.addEventListener('mouseup', this.onKeyUpHandler);\r\n            input.addEventListener('keydown', this.onKeyDownHandler, true);\r\n\r\n            data(input, 'index', this.inputs.push(input) - 1);\r\n        });\r\n    }\r\n\r\n    removeInputs(...args) {\r\n        const inputs = Array.prototype.concat.apply([], args.map(d => d[0] ? Array.prototype.slice.call(d, 0) : d));\r\n\r\n        inputs.forEach(input => {\r\n            const index = data(input, 'index');\r\n            if (!isNaN(index)) {\r\n                this.inputs.splice(index, 1);\r\n\r\n                // destroy events\r\n                input.removeEventListener('blur', this.onBlurHandler);\r\n                input.removeEventListener('keyup', this.onKeyUpHandler);\r\n                input.removeEventListener('mouseup', this.onKeyUpHandler);\r\n                input.removeEventListener('keydown', this.onKeyDownHandler, true);\r\n            }\r\n        });\r\n    }\r\n\r\n    destroy() {\r\n        this.removeInputs(this.inputs);\r\n    }\r\n}\r\n\r\nexport default AutoComposeTextarea;\r\n"],"names":["ensure","context","object","keys","concat","forEach","key","Error","ensureType","type","valueType","value","TypeError","getCursorPosition","input","selectionStart","selectionEnd","sort","a","b","data","element","dataset","JSON","stringify","parse","POSITIONER_CHARACTER","FONT_PROPERTIES","HOST_PROPERTIES","CLONE_PROPERTIES","FILLER","getGlobalOffset","node","$0","top","left","offsetLeft","offsetTop","offsetParent","createNode","div","document","createElement","innerHTML","html","trim","firstChild","OverlaySuggestion","isEmpty","isActive","suggestion","host","style","cursor","position","borderColor","backgroundColor","overflow","pointerEvents","offset","appendChild","createTextNode","lineHeight","content","hide","body","elementPosition","elementStyles","window","getComputedStyle","prop","height","parseFloat","color","scrollHeight","parseInt","overflowY","leftWidth","paddingLeft","rightWidth","width","paddingRight","firstLineWidth","direction","float","span","whiteSpace","fontSize","textNode","crossed","lastSpaceAt","suggestionLength","length","i","text","test","nodeValue","offsetWidth","j","childNodes","lastChild","removeChild","display","onSet","empty","split","char","charNode","opacity","addEventListener","slice","preventDefault","stopPropagation","getCaretPosition","cursorPosition","clone","id","positioner","computed","maxWidth","wordWrap","caretPosition","scrollTop","scrollLeft","setValue","onChange","startPosition","originalValue","focus","setSelectionRange","AutoComposeTextarea","options","composer","inputs","Function","prototype","self","handledInKeyDown","onBlurHandler","onKeyDownHandler","e","keyCode","getValue","bind","keyUpIndex","onKeyUpHandler","endPosition","postValue","preValue","call","result","asyncReference","fill","show","addInputs","args","Array","apply","map","d","tagName","push","index","isNaN","splice","removeEventListener","removeInputs"],"mappings":"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"}